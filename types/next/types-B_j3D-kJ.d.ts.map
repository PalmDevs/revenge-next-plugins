{"version":3,"file":"types-B_j3D-kJ.d.ts","names":["debounce","F","Parameters","Promise","asap","noop","getErrorStack","getCurrentStack","AnyObject","isObject","mergeDeep","defineLazyProperty","T","K","defineLazyProperties","Record","Partial","allSettled","Promise","PromiseSettledResult","sleep","sleepReject","isProxy","isProxified","getProxyTarget","ProxifyOptions","proxify","T","unproxify","DestructureOptions","DestructureResult","O","K","destructure","ExtractPredicate","SearchTree","Record","SearchFilter","FindInTreeOptions","Set","findInTree","F","__types0","ReactNode","SearchFilter","useIsFirstRender","useReRender","react3","ActionDispatch","findInReactFiber","Extract","F","ExtractPredicate","If","LogicalOr","Metro","FilterResult","F","Filter","R","IsFilterWithExports","WE","WithExports","ModuleID","ModuleExports","FilterGenerator","G","Parameters","createFilterGenerator","A","ByProps","Record","T","Array","byProps","WithoutProps","withoutProps","BySingleProp","bySingleProp","ByName","byName","ComparableDependencyMap","ByDependencies","loose","relative","byDependencies","Every","F1","F2","F3","every","Some","some","ModuleStateAware","IF","moduleStateAware","PreferExports","WEF","preferExports","Filter","FilterGenerator","FC","ByGeneratedIconComponent","N","byGeneratedIconComponent","lookupGeneratedIconComponent","_revenge_mod_utils_error0","_revenge_mod_utils_object0","_revenge_mod_utils_promise0","_revenge_mod_utils_proxy0","_revenge_mod_utils_tree0","_revenge_mod_utils_react0","_revenge_mod_utils_discord0","Nullish","If","T","Then","Else","AnyObject","Record","LogicalOr","T1","T2","DeepPartial","K","ExtractPredicate","R","PreInitPluginApiUtils","_revenge_mod_utils_callback0","PluginApiUtils","_0","sideEffect","If","Metro","ModuleID","Array","RequireFn","Module","ModuleExports","DependencyMap","Initialized","FactoryFn","ModuleDefinition","Map","ModuleList","RevengeMetro","MaybeDefaultExportMatched","T"],"sources":["../../lib/utils/src/callback.d.ts","../../lib/utils/src/error.d.ts","../../lib/utils/src/object.d.ts","../../lib/utils/src/promise.d.ts","../../lib/utils/src/proxy.d.ts","../../lib/utils/src/tree.d.ts","../../lib/utils/src/react.d.ts","../../lib/modules/src/finders/filters.d.ts","../../lib/utils/src/discord.d.ts","../../lib/utils/src/types.d.ts","../../lib/modules/src/types.d.ts"],"sourcesContent":["export declare function debounce<F extends (...args: any[]) => any>(func: F, timeout: number): (...args: Parameters<F>) => Promise<unknown>;\n/**\n * A function that runs the callback as soon as possible.\n * @param cb The callback to run.\n */\nexport declare const asap: (cb: (...args: any[]) => any) => void;\nexport declare const noop: () => void;\n","export declare function getErrorStack(e: unknown): string | undefined;\nexport declare function getCurrentStack(): string;\n","import type { AnyObject } from './types';\n/**\n * Simple check if to see if value is an object.\n *\n * @param val The value to check.\n */\nexport declare function isObject(val: any): val is AnyObject;\n/**\n * Deep merge two objects.\n *\n * @param target The object to merge into.\n * @param source The object to merge from.\n *\n * @returns The merged target.\n */\nexport declare function mergeDeep(target: AnyObject, source: AnyObject): AnyObject;\n/**\n * Define a lazy property on an object that will be loaded when accessed.\n *\n * @param target The target object to define the property on.\n * @param property The property key to define.\n * @param loader The function that will be called to load the property value when accessed.\n * @return The target object with the lazy property defined.\n */\nexport declare function defineLazyProperty<T extends object, K extends keyof T>(target: T, property: K, loader: () => T[K]): T;\n/**\n * Define multiple lazy properties on an object that will be loaded when accessed.\n *\n * @param target The target object to define the properties on.\n * @param loaders An object where each key is a property name and the value is a function that returns the property value when accessed.\n * @returns The target object with the lazy properties defined.\n */\nexport declare function defineLazyProperties<T extends object>(target: T, loaders: Partial<Record<keyof T, () => T[keyof T]>>): T;\n","export declare function allSettled(promises: Promise<any>[]): Promise<PromiseSettledResult<any>[]>;\nexport declare function sleep(ms: number): Promise<void>;\nexport declare function sleepReject(ms: number, msg?: string): Promise<void>;\n","/**\n * This patch allows us to store instances of Proxy, so we can check whether a value is created using Proxy or not.\n * This is especially useful for blacklisting exports that cannot be patched.\n */\n/**\n * Returns whether the object is a proxy.\n *\n * @param obj The object to check\n */\nexport declare function isProxy(obj: object): boolean;\n/**\n * Returns whether the object is a proxified value.\n *\n * @param obj The object to check\n */\nexport declare function isProxified(obj: object): boolean;\n/**\n * Returns the target of the proxy.\n *\n * @param obj The proxy\n * @returns The target of the proxy\n */\nexport declare function getProxyTarget(obj: object): object | undefined;\nexport interface ProxifyOptions {\n    /**\n     * The hint for the proxified value.\n     *\n     * @default function () {}\n     */\n    hint?: object;\n    /**\n     * Whether the proxified value should be cached.\n     */\n    cache?: boolean;\n    /**\n     * For methods of the proxified value, whether to bind the `this` context to the proxified value.\n     * The original reference of this method will NOT be retained. To get the original method, use `getProxyTarget` on the method.\n     *\n     * @default false\n     */\n    bindMethods?: boolean;\n}\n/**\n * Proxify a value.\n *\n * @param signal The signal to use to get the value.\n * @param options The options to use for the proxified value.\n * @returns A proxified value that will be updated when the signal is updated.\n *\n * @example Without cache\n * ```ts\n * const proxified = proxify(() => ({ value: Math.random() }), { hint: {} })\n * console.log(proxified) // { value: 0.123 }\n * console.log(proxified.value) // 0.456\n * console.log(proxified) // { value: 0.789 }\n * ```\n *\n * @example With cache\n * ```ts\n * const proxified = proxify(() => ({ value: Math.random() }), { hint: {}, cache: true })\n * console.log(proxified) // { value: 0.123 }\n * console.log(proxified.value) // 0.123\n * console.log(proxified) // { value: 0.123 }\n * ```\n */\nexport declare function proxify<T>(signal: () => T, options?: ProxifyOptions): T;\n/**\n * Get the value of a proxified value at the current moment.\n * Returns the same value if not a proxified value.\n *\n * @see {@link proxify} for more documentation.\n *\n * @param proxified The proxified value.\n * @returns The unproxified value, or the value if it's not a proxified value.\n *\n * @example Without cache\n * ```ts\n * const proxified = proxify(() => ({ value: Math.random() }), { hint: {} })\n * const x = unproxify(proxified)\n * console.log(x) // { value: 0.123 }\n * console.log(x.value) // 0.123\n * console.log(proxified) // { value: 0.456 }\n * ```\n *\n * @example With cache\n * ```ts\n * const proxified = proxify(() => ({ value: Math.random() }), { hint: {}, cache: true })\n * const x = unproxify(proxified)\n * console.log(x) // { value: 0.123 }\n * console.log(x.value) // 0.123\n * console.log(proxified) // { value: 0.123 }\n * ```\n */\nexport declare function unproxify<T extends object>(proxified: T): T;\nexport type DestructureOptions<T extends object> = {\n    [K in keyof T]?: ProxifyOptions;\n};\nexport type DestructureResult<T extends object, O extends DestructureOptions<T>> = {\n    [K in keyof T]: O[K] extends ProxifyOptions ? T[K] : never;\n};\n/**\n * Destructure a proxified value.\n *\n * @param proxified The proxified value.\n * @param options The options to use for the destructured value.\n *\n * @see {@link proxify} for more documentation.\n *\n * @throws {TypeError} If the value is not a proxifiable value (primitives).\n *\n * @example\n * ```ts\n * // cache is not turned on, so each access will call the signal again\n * const { x, y } = destructure(\n *   proxify(() => ({ x: Math.random(), y: [Math.random()], z: null })),\n *   { hint: {} }\n * )\n *\n * // Non-nullish primitives are not proxifiable\n * x // TypeError: Cannot destructure and proxify a primitive (reading 'x')\n *\n * y // [0.123]\n * y // [0.456]\n *\n * z // TypeError: Cannot destructure and proxify null (reading 'z')\n * ```\n */\nexport declare function destructure<T extends object, const O extends DestructureOptions<T>>(proxified: T, options?: O): DestructureResult<T, O>;\n","import type { ExtractPredicate } from './types';\nexport type SearchTree = Record<string, any>;\nexport type SearchFilter = (tree: SearchTree) => boolean;\nexport interface FindInTreeOptions {\n    /**\n     * A set of keys to search for in the tree.\n     */\n    walkable?: Set<string>;\n    /**\n     * A set of keys to ignore when searching the tree.\n     */\n    ignore?: Set<string>;\n    /**\n     * The maximum depth to search in the tree.\n     *\n     * @default 100\n     */\n    maxDepth?: number;\n}\nexport declare function findInTree<F extends SearchFilter>(tree: SearchTree, filter: F, opts?: FindInTreeOptions): ExtractPredicate<F> | undefined;\n","import type { ReactNode } from 'react';\nimport type { SearchFilter } from './tree';\nexport declare function useIsFirstRender(): boolean;\nexport declare function useReRender(): import(\"react\").ActionDispatch<[]>;\nexport declare function findInReactFiber<F extends SearchFilter>(fiber: Extract<ReactNode, object>, filter: F): import(\"./types\").ExtractPredicate<F> | undefined;\n","import type { If, LogicalOr } from '@revenge-mod/utils/types';\nimport type { Metro } from '../types';\nexport type FilterResult<F> = F extends Filter<infer R, boolean> ? R : never;\nexport type IsFilterWithExports<F> = F extends Filter<any, infer WE> ? WE : never;\nexport interface Filter<_Inferable = any, WithExports extends boolean = boolean> {\n    (...args: If<WithExports, [\n        id: Metro.ModuleID,\n        exports: Metro.ModuleExports\n    ], [\n        id: Metro.ModuleID,\n        exports?: never\n    ]>): boolean;\n    key: string;\n}\nexport interface FilterGenerator<G extends (...args: any[]) => Filter> extends G {\n    keyFor: (args: Parameters<G>) => string;\n}\n/**\n * Create a filter generator.\n *\n * @param filter The function that filters the modules.\n * @param keyFor The function that generates the key for the filter.\n * @returns A function that generates a filter with the specified arguments.\n *\n * @example\n * ```ts\n * const custom = createFilterGenerator<[arg1: number, arg2: string]>(\n *   ([arg1, arg2], id, exports) => {\n *     // filter logic\n *     return true\n *   },\n *   ([arg1, arg2]) => `revenge.custom(${arg1}, ${arg2})`\n * )\n * ```\n *\n * @see {@link byProps} for an example on custom-typed filters.\n */\nexport declare function createFilterGenerator<A extends any[]>(filter: (args: A, id: Metro.ModuleID, exports: Metro.ModuleExports) => boolean, keyFor: (args: A) => string): FilterGenerator<(...args: A) => Filter<any, true>>;\nexport declare function createFilterGenerator<A extends any[]>(filter: (args: A, id: Metro.ModuleID) => boolean, keyFor: (args: A) => string): FilterGenerator<(...args: A) => Filter<any, false>>;\nexport type ByProps = FilterGenerator<(<T extends Record<string, any> = Record<string, any>>(prop: keyof T, ...props: Array<keyof T>) => Filter<T, true>)>;\n/**\n * Filter modules by their exports having all of the specified properties.\n *\n * @param prop The property to check for.\n * @param props More properties to check for (optional).\n *\n * @example\n * ```ts\n * const [React] = lookupModule(byProps<typeof import('react')>('createElement'))\n * // const React: typeof import('react')\n * ```\n */\nexport declare const byProps: ByProps;\nexport type WithoutProps = FilterGenerator<(<T extends Record<string, any>>(prop: string, ...props: string[]) => Filter<T, true>)>;\n/**\n * Filter modules by their exports having none of the specified properties.\n *\n * @param prop The property to check for.\n * @param props More properties to check for (optional).\n */\nexport declare const withoutProps: WithoutProps;\nexport type BySingleProp = FilterGenerator<(<T extends Record<string, any>>(prop: keyof T) => Filter<T, true>)>;\n/**\n * Filter modules by their exports having only the specified property.\n *\n * @param prop The property to check for.\n *\n * @example\n * ```ts\n * const [FormSwitchModule] = lookupModule(bySingleProp('FormSwitch'))\n * // const FormSwitchModule: { FormSwitch: any }\n * ```\n */\nexport declare const bySingleProp: BySingleProp;\nexport type ByName = FilterGenerator<(<T extends object = object>(name: string) => Filter<T, true>)>;\n/**\n * Filter modules by their exports having the specified name.\n *\n * Usually used for function components or classes.\n *\n * @param name The name to check for.\n *\n * @example Auto-typing as object\n * ```ts\n * const [SomeComponent] = lookupModule(byName('SomeComponent'))\n * // const SomeComponent: { name: 'SomeComponent' }\n * ```\n *\n * @example Typing as function component\n * ```ts\n * type MyComponent = React.FC<{ foo: string }>\n *\n * const [MyComponent] = lookupModule(byName<MyComponent>('MyComponent'))\n * // const MyComponent: MyComponent & { name: 'MyComponent' }\n * ```\n *\n * @example Typing as class\n * ```\n * interface SomeClass {\n *    someMethod(): void\n * }\n *\n * const [SomeClass] = lookupModule(byName<{ new(param: string): SomeClass }>('SomeClass'))\n * // const SomeClass: { new(): SomeClass, name: 'SomeClass' }\n */\nexport declare const byName: ByName;\nexport interface ComparableDependencyMap extends Array<Metro.ModuleID | number | undefined | ComparableDependencyMap> {\n    l?: boolean;\n    r?: number;\n}\ntype ByDependencies = FilterGenerator<(<T>(deps: ComparableDependencyMap) => Filter<T, false>)> & {\n    loose: typeof loose;\n    relative: typeof relative;\n};\n/**\n * Filter modules by their dependency map.\n *\n * @param deps The dependency map to check for, can be a sparse array or have `undefined` to be any dependency (\"dynamic\"). **Order and size matters!**\n *\n * To do proper fingerprinting for modules:\n * @see {@link byDependencies.loose} to loosen the checks.\n * @see {@link byDependencies.relative} to compare dependencies relatively.\n *\n * @example\n * ```ts\n * const { loose, relative } = byDependencies\n *\n * // Logger's module ID is 5\n * // It has 3 dependencies [4, ?, 2]\n *\n * const [Logger] = lookupModule(byDependencies([4, undefined, 2]))\n * // or\n * const [Logger] = lookupModule(byDependencies([4, , 2]))\n *\n * // Relative dependencies\n * const [Logger] = lookupModule(byDependencies([relative(-1), undefined, 2]))\n *\n * // Nested dependencies\n * // The last dependency (module ID 2) would need to have zero dependencies:\n * const [Logger] = lookupModule(byDependencies([4, undefined, []]))\n *\n * // Loose dependencies\n * // Module having these dependencies: [4, ...], [4, ..., ...], [4, ..., ..., ...], etc. would match:\n * const [SomeOtherModule] = lookupModule(byDependencies(loose([4])))\n * ```\n */\nexport declare const byDependencies: ByDependencies;\n/**\n * Make this set of comparable dependencies as loose.\n *\n * Making a dependency loose skips the exact length check, but the order of the set dependencies still matters.\n * If you mark an index as dynamic, the same index must also be present in the other map during comparison to pass.\n *\n * @param deps The dependency map to make loose. This permanently modifies the array.\n * @returns The modified dependency map.\n */\ndeclare function loose(deps: ComparableDependencyMap): ComparableDependencyMap;\n/**\n * Marks this dependency to compare relatively to the module ID being compared.\n *\n * @param id The dependency ID to mark as relative.\n * @param root Marks this dependency to compare relatively to the root (returning) module ID being compared. Useful for nested comparisons where you want to compare by the root module ID instead of the parent's module ID of the nested dependency.\n */\ndeclare function relative(id: Metro.ModuleID, root?: boolean): number;\ndeclare namespace relative {\n    var withDependencies: (deps: ComparableDependencyMap, id: Metro.ModuleID, root?: boolean) => ComparableDependencyMap;\n}\nexport type Every = FilterGenerator<{\n    <F1 extends Filter, F2 extends Filter>(f1: F1, f2: F2): Filter<FilterResult<F1> & FilterResult<F2>, LogicalOr<IsFilterWithExports<F1>, IsFilterWithExports<F2>>>;\n    <F1 extends Filter, F2 extends Filter, F3 extends Filter>(f1: F1, f2: F2, f3: F3): Filter<FilterResult<F1> & FilterResult<F2> & FilterResult<F3>, LogicalOr<LogicalOr<IsFilterWithExports<F1>, IsFilterWithExports<F2>>, IsFilterWithExports<F3>>>;\n    (...filters: Filter[]): Filter;\n}>;\n/**\n * Combines multiple filters into one, returning true if **every** filter matches.\n *\n * @param filters The filters to combine.\n *\n * @example\n * ```ts\n * const [SomeModule] = lookupModule(every(\n *    byProps('x', 'name'),\n *    byName('SomeName'),\n *    byDependencies([1, 485, undefined, 2]),\n * ))\n * ```\n */\nexport declare const every: Every;\nexport type Some = FilterGenerator<{\n    <F1 extends Filter, F2 extends Filter>(f1: F1, f2: F2): Filter<FilterResult<F1> | FilterResult<F2>, IsFilterWithExports<F1> | IsFilterWithExports<F2>>;\n    <F1 extends Filter, F2 extends Filter, F3 extends Filter>(f1: F1, f2: F2, f3: F3): Filter<FilterResult<F1> | FilterResult<F2> | FilterResult<F3>, IsFilterWithExports<F1> | IsFilterWithExports<F2> | IsFilterWithExports<F3>>;\n    (...filters: Filter[]): Filter;\n}>;\n/**\n * Combines multiple filters into one, returning true if **some** filters match.\n *\n * @param filters The filters to combine.\n *\n * @example\n * ```ts\n * const [SomeModule] = lookupModule(some(\n *   byProps('x', 'name'),\n *   byName('SomeName'),\n *   byDependencies([1, 485, undefined, 2]),\n * ))\n * ```\n */\nexport declare const some: Some;\nexport type ModuleStateAware = FilterGenerator<(<IF extends Filter>(initializedFilter: IF, uninitializedFilter: Filter<any, false>, strict?: boolean) => Filter<FilterResult<IF>, false>)>;\n/**\n * Filter modules depending on their initialized state. **Initialized modules with bad exports are skipped.**\n *\n * @param initializedFilter The filter to use for initialized modules.\n * @param uninitializedFilter The filter to use for uninitialized modules.\n * @param strict Whether to also filter with `uninitializedFilter` after `initializedFilter` passes, confirming the module is definitely the correct module. Defaults to `false`.\n *\n * @example\n * ```ts\n * // will filter byProps('x') for initialized modules\n * // and byDependencies([1, 485, undefined, 2]) for uninitialized modules\n * const [SomeModule] = lookupModule(moduleStateAware(\n *   byProps('x'),\n *   byDependencies([1, 485, undefined, 2]),\n * ))\n * ```\n */\nexport declare const moduleStateAware: ModuleStateAware;\nexport type PreferExports = FilterGenerator<(<WEF extends Filter>(withExportsFilter: WEF, exportslessFilter: Filter<any, false>, strict?: boolean) => Filter<FilterResult<WEF>, false>)>;\n/**\n * Filter modules depending on if their exports are available and filterable.\n *\n * @see {@link isModuleExportsBad} for more information on what is considered bad module exports.\n *\n * @see {@link moduleStateAware} for an alternative that filters based on the module's initialized state.\n *\n * @param withExportsFilter The filter to use for modules with proper exports.\n * @param exportslessFilter The filter to use for modules without proper exports (uninitialized or bad).\n * @param strict Whether to also filter with `exportslessFilter` after `withExportsFilter` passes, confirming the module is definitely the correct module. Defaults to `false`.\n *\n * @example\n * ```ts\n * // will filter byProps('x') for modules with proper exports\n * // and byDependencies([1, 485, undefined, 2]) for without proper exports (uninitialized or bad)\n * const [SomeModule] = lookupModule(preferExports(\n *   byProps('x'),\n *   byDependencies([1, 485, undefined, 2]),\n * ))\n * ```\n */\nexport declare const preferExports: PreferExports;\nexport {};\n","import type { Filter, FilterGenerator } from '@revenge-mod/modules/finders/filters';\nimport type { FC } from 'react';\nexport type ByGeneratedIconComponent = FilterGenerator<(<N extends string>(name: N, ...assets: string[]) => Filter<{\n    [K in N]: FC<any>;\n}>)>;\n/**\n * Filter by icon component name and asset names.\n *\n * **Make sure to set `uninitialized: true` when using this filter in `lookupModule`!**\n *\n * @param names The component name, then the asset names if the component has multiple assets. *\n * @example\n * ```ts\n * const [CopyIconModule] = lookupModule(\n *   byGeneratedIconComponent('CopyIcon'),\n *   {\n *     uninitialized: true,\n *   }\n * )\n * if (CopyIconModule) {\n *   const { CopyIcon } = CopyIconModule\n *   // Use CopyIcon as a React component\n * }\n * ```\n * @example\n * ```ts\n * const [CircleXIconModule] = lookupModule(\n *   byGeneratedIconComponent(\n *     'CircleXIcon',\n *     'CircleXIcon-secondary',\n *     'CircleXIcon-primary',\n *   ),\n *   {\n *    uninitialized: true,\n *   }\n * )\n * ```\n */\nexport declare const byGeneratedIconComponent: ByGeneratedIconComponent;\n/**\n * Looks up a generated icon component by its name and asset names.\n *\n * @param names The component name, then the asset names if the component has multiple assets.\n * @returns The icon component, or `undefined` if it could not be found.\n */\nexport declare function lookupGeneratedIconComponent<N extends string>(...names: [N, ...string[]]): FC<any> | undefined;\n","export type Nullish = null | undefined;\nexport type If<T, Then, Else> = T extends true ? Then : Else;\nexport type AnyObject = Record<any, any>;\nexport type LogicalOr<T1, T2> = T1 extends true ? true : T2 extends true ? true : false;\nexport type DeepPartial<T> = {\n    [K in keyof T]?: T[K] extends AnyObject ? DeepPartial<T[K]> : T[K];\n};\nexport type ExtractPredicate<T> = T extends (arg: any) => arg is infer R ? R : never;\nexport interface PreInitPluginApiUtils {\n    callback: typeof import('@revenge-mod/utils/callback');\n    error: typeof import('@revenge-mod/utils/error');\n    object: typeof import('@revenge-mod/utils/object');\n    promise: typeof import('@revenge-mod/utils/promise');\n    proxy: typeof import('@revenge-mod/utils/proxy');\n    tree: typeof import('@revenge-mod/utils/tree');\n}\nexport interface PluginApiUtils extends PreInitPluginApiUtils {\n    react: typeof import('@revenge-mod/utils/react');\n    discord: typeof import('@revenge-mod/utils/discord');\n}\ndeclare module '@revenge-mod/plugins/types' {\n    interface UnscopedPreInitPluginApi {\n        utils: PreInitPluginApiUtils;\n    }\n    interface UnscopedInitPluginApi {\n        utils: PluginApiUtils;\n    }\n}\n","import type { If } from '@revenge-mod/utils/types';\n/**\n * Metro is a bundler for React Native.\n *\n * @see {@link https://github.com/facebook/metro/blob/main/packages/metro-runtime/src/polyfills/require.js}\n */\nexport declare namespace Metro {\n    type DependencyMap = Array<ModuleID>;\n    type FactoryFn = (global: object, require: RequireFn, metroImportDefault: RequireFn, metroImportAll: RequireFn, moduleObject: Module, exports: ModuleExports, dependencyMap: DependencyMap) => void;\n    type ModuleID = number;\n    interface ModuleDefinition<Initialized = boolean> {\n        /**\n         * Dependencies of this module (set to `undefined` once the module is initialized)\n         */\n        dependencyMap: If<Initialized, undefined, DependencyMap>;\n        /**\n         * Error that occurred during initialization\n         */\n        error?: any;\n        /**\n         * Factory function that initializes the module\n         */\n        factory: If<Initialized, undefined, FactoryFn>;\n        /**\n         * Whether an error occurred during initialization\n         */\n        hasError: boolean;\n        importedAll: ModuleExports;\n        importedDefault: ModuleExports;\n        /**\n         * Whether factory has been successfully called\n         * */\n        isInitialized: boolean;\n        publicModule: ModuleExports;\n    }\n    type Module = {\n        id?: ModuleID;\n        exports: ModuleExports;\n    };\n    type ModuleList = Map<ModuleID, ModuleDefinition>;\n    type RequireFn = (id: ModuleID) => ModuleExports;\n    type DefineFn = (factory: FactoryFn, moduleId: ModuleID, dependencyMap: DependencyMap) => void;\n    type ClearFn = () => ModuleList;\n    interface Require extends RequireFn {\n        importDefault: RequireFn;\n        importAll: RequireFn;\n    }\n    type ModuleExports = any;\n}\nexport declare namespace RevengeMetro {\n    type ModuleDefinition<Initialized = boolean> = {\n        flags: number;\n        module: Metro.Module;\n        factory: If<Initialized, undefined, () => void>;\n        importedDefault?: Metro.ModuleExports;\n        importedAll?: Metro.ModuleExports;\n        error?: If<Initialized, undefined, any>;\n    };\n    type ModuleList = Map<Metro.ModuleID, ModuleDefinition>;\n}\n/**\n * Maybe the default export matched instead of the namespace, because you're using `options.returnNamespace`.\n */\nexport type MaybeDefaultExportMatched<T> = T | {\n    default: T;\n};\n"],"mappings":"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"}
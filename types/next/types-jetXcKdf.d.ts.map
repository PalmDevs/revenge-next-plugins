{"version":3,"file":"types-jetXcKdf.d.ts","names":["FiniteDomain","PropertyKey","Key","Record","UnknownFunction","Callable","AbstractNewable","This","Args","Return","ConcreteNewable","UnionToIntersection","Union","Intersection","BeforeHook","T","OverloadUnion","U","InsteadHook","AfterHook","Overload","OmitOverloads","PartialOverload","CThis","CArgs","CReturn","NArgs","NReturn","OverloadUnionCallableNewable","OverloadUnionCallable","OverloadUnionNewable","CurrentCallable","CurrentNewable","OverloadUnionCallableNewableInner","PreviousOverload","OverloadUnionCallableInner","OverloadUnionNewableInner","UnpatchFunction","AfterHook","UnknownFunction","UnpatchFunction","after","Key","Record","Parent","BeforeHook","UnknownFunction","UnpatchFunction","before","Key","Record","Parent","InsteadHook","UnknownFunction","UnpatchFunction","instead","Key","Record","Parent","ReactNative","AssetDestPathResolver","AssetsRegistry","PackagerAsset","RunApplicationCallback","Metro","ReactNative","Asset","PackagerAsset","CustomAsset","AssetId","AssetsRegistry","Pick","RegisterableAsset","Omit","_13","ModuleID","sideEffect","Metro","ReactNative","AssetsRegistryModuleId","ModuleID","AssetsRegistry","Asset","AssetId","CustomAsset","PackagerAsset","RegisterableAsset","AssetsRegistry","AssetsRegistryModuleId","setPreferredAssetType","getAssets","Generator","getCustomAssets","getPackagerAssets","getAssetByName","getAssetsByName","Record","getAssetIdByName","registerAsset","addAssetOverride","removeAssetOverride","If","Metro","Filter","RunFilterOptions","RunFilterReturnExportsOptions","ReturnNamespace","FilterResultFlags","FilterResultFlag","FilterResultFlagToHumanReadable","Record","runFilter","ModuleID","ModuleExports","exportsFromFilterResultFlag","If","Nullish","MaybeDefaultExportMatched","Metro","RunFilterReturnExportsOptions","Filter","FilterResult","LookupModulesOptionsWithAll","A","LookupModulesOptionsWithInitializedUninitialized","U","LookupModulesOptions","ReturnNamespace","Initialize","All","Uninitialized","LookupModulesResult","O","F","LookupFilterResult","ModuleID","NotFoundResult","LookupNotFoundResult","lookupModules","Generator","WE","lookupModule","lookupModuleByImportedPath","T","MaybeDefaultExportMatched","Metro","RunFilterReturnExportsOptions","Filter","FilterResult","BaseWaitForModulesOptions","All","WaitForModulesUnsubscribeFunction","WaitForModulesCallback","T","ModuleID","WaitForModulesOptions","ReturnNamespace","WaitForModulesResult","O","F","waitForModules","waitForModuleByImportedPath","If","MaybeDefaultExportMatched","Metro","RunFilterReturnExportsOptions","Filter","FilterResult","LookupModulesOptions","WaitForModulesOptions","GetModuleOptions","ReturnNamespace","Uninitialized","All","GetModuleResult","O","F","GetModuleCallback","T","ModuleID","GetModuleUnsubscribeFunction","getModule","WE","getModuleByImportedPath","Metro","ModuleFirstRequiredCallback","ModuleID","ModuleInitializedCallback","ModuleExports","ModuleFinishedImportingCallback","onAnyModuleInitialized","onModuleInitialized","onModuleFinishedImporting","onAnyModuleFirstRequired","onModuleFirstRequired","Metro","getModuleDependencies","ModuleID","DependencyMap","isModuleInitialized","getInitializedModuleExports","ModuleExports","isModuleExportBad","PropertyKey","getNativeModule","T","PluginApiModulesFindersFilters","PluginApiModulesFindersGet","PluginApiModulesFindersLookup","PluginApiModulesFindersWait","PluginApiModulesMetroSubscriptions","PluginApiModulesMetroUtils","PluginApiModulesNative_","PluginApiModules","PluginApiModulesFinders","PluginApiModulesMetro","PluginApiModulesNative","modules","PluginFlags","PluginStatus","PluginsStorageDirectory","PluginApiPlugins","_revenge_mod_plugins_constants0","plugins","react_native0","react_jsx_runtime0","Metro","ReactModuleId","ModuleID","ReactNativeModuleId","ReactJSXRuntimeModuleId","React","react4","ReactNative","ReactJSXRuntime","ElementType","JSX","Key","ReactElement","ReactJSXRuntime","AnyJSXFactoryFunction","BeforeJSXCallback","E","ElementTypeProps","Parameters","InsteadJSXCallback","ReturnType","AfterJSXCallback","Props","IntrinsicElements","afterJSX","beforeJSX","insteadJSX","RunApplicationCallback","onRunApplication","onRunApplicationFinished","PluginApiReact_","PluginApiReactJsxRuntime","PluginApiReactNative","PluginApiReact","react","_revenge_mod_assets0","FunctionComponent","PluginApiModules","PluginApiPlugins","PluginApiReact","PluginApiExtensionsOptions","UnscopedPreInitPluginApi","_revenge_mod_patcher0","UnscopedInitPluginApi","O","UnscopedPluginApi","PluginCleanup","PluginCleanupApi","PluginDecorateApi","PluginApiInLifecycleMap","S","PluginApiDecorator","Plugin","PreInitPluginApi","InitPluginApi","PluginApi","PluginManifest","PluginDependency","PluginOptions","PluginSettingsComponent","PluginLifecycles","Promise"],"sources":["../../lib/patcher/src/types.d.ts","../../lib/patcher/src/hooks/after.d.ts","../../lib/patcher/src/hooks/before.d.ts","../../lib/patcher/src/hooks/instead.d.ts","../../lib/patcher/src/index.d.ts","../../lib/react/src/types.d.ts","../../lib/assets/src/types.d.ts","../../lib/assets/src/preinit.d.ts","../../lib/assets/src/index.d.ts","../../lib/modules/src/finders/_internal.d.ts","../../lib/modules/src/finders/lookup.d.ts","../../lib/modules/src/finders/wait.d.ts","../../lib/modules/src/finders/get.d.ts","../../lib/modules/src/metro/subscriptions/index.d.ts","../../lib/modules/src/metro/utils.d.ts","../../lib/modules/src/native.d.ts","../../lib/plugins/src/apis/modules.d.ts","../../lib/plugins/src/constants.d.ts","../../lib/plugins/src/apis/plugins.d.ts","../../lib/react/src/index.d.ts","../../lib/react/src/jsx-runtime/index.d.ts","../../lib/react/src/native/index.d.ts","../../lib/plugins/src/apis/react.d.ts","../../lib/plugins/src/types.d.ts"],"sourcesContent":["export type FiniteDomain<Key extends PropertyKey> = unknown extends (Key extends unknown ? object extends Record<Key, unknown> ? unknown : never : never) ? never : Key;\nexport type UnknownFunction = Callable | AbstractNewable;\nexport type Callable<This = never, Args extends readonly unknown[] = never, Return = unknown> = (this: This, ...args: Args) => Return;\nexport type AbstractNewable<Args extends readonly unknown[] = never, Return = unknown> = abstract new (...args: Args) => Return;\nexport type ConcreteNewable<Args extends readonly unknown[] = never, Return = unknown> = new (...args: Args) => Return;\nexport type UnionToIntersection<Union> = (Union extends unknown ? (arg: Union) => unknown : never) extends (arg: infer Intersection) => unknown ? Intersection & Union : never;\nexport type BeforeHook<T extends UnknownFunction = UnknownFunction> = OverloadUnion<T> extends infer U ? 0 extends 1 & U ? (args: any) => any : UnionToIntersection<U extends Callable<never, infer Args> ? (args: Args) => Args : U extends ConcreteNewable<infer Args> ? (args: Args) => Args : never> : never;\nexport type InsteadHook<T extends UnknownFunction = UnknownFunction> = OverloadUnion<T> extends infer U ? 0 extends 1 & U ? ((this: any, args: any[], originalFunction: T) => any) | (abstract new (args: any[], originalFunction: T) => any) : UnionToIntersection<U extends Callable<infer This, infer Args, infer Return> ? (this: This, args: Args, originalFunction: T) => Return : U extends ConcreteNewable<infer Args, infer Return> ? abstract new (args: Args, originalFunction: T) => Return : never> : never;\nexport type AfterHook<T extends UnknownFunction = UnknownFunction> = OverloadUnion<T> extends infer U ? 0 extends 1 & U ? (result: any) => any : UnionToIntersection<U extends Callable<never, never, infer Return> ? (result: Return) => Return : U extends ConcreteNewable<never, infer Return> ? (result: Return) => Return : never> : never;\n/** @see {@link https://github.com/microsoft/TypeScript/issues/32164#issuecomment-1146737709} */\nexport type OverloadUnion<Overload extends UnknownFunction, PartialOverload = OmitOverloads<Overload>> = 0 extends 1 & Overload ? any : Overload extends Callable<infer CThis, infer CArgs, infer CReturn> ? Overload extends AbstractNewable<infer NArgs, infer NReturn> ? OverloadUnionCallableNewable<Overload, PartialOverload, Callable<CThis, CArgs, CReturn>, ConcreteNewable<NArgs, NReturn>> : OverloadUnionCallable<Overload, PartialOverload, Callable<CThis, CArgs, CReturn>> : Overload extends AbstractNewable<infer NArgs, infer NReturn> ? OverloadUnionNewable<Overload, PartialOverload, ConcreteNewable<NArgs, NReturn>> : never;\nexport type OmitOverloads<T> = {\n    [Key in keyof T]: T[Key];\n};\nexport type OverloadUnionCallableNewable<Overload extends Callable & AbstractNewable, PartialOverload, CurrentCallable extends Callable, CurrentNewable extends ConcreteNewable> = OverloadUnionCallableNewableInner<CurrentCallable & CurrentNewable & Overload, CurrentCallable & CurrentNewable & PartialOverload, CurrentCallable & CurrentNewable> | CurrentCallable | CurrentNewable;\nexport type OverloadUnionCallableNewableInner<Overload extends Callable & AbstractNewable, PartialOverload, PreviousOverload extends Callable & ConcreteNewable> = PartialOverload extends Overload ? never : Overload extends Callable<infer CThis, infer CArgs, infer CReturn> ? Overload extends AbstractNewable<infer NArgs, infer NReturn> ? // Detects infinite recursion caused by generic overloads.\nCallable<CThis, CArgs, CReturn> & ConcreteNewable<NArgs, NReturn> extends PreviousOverload ? PreviousOverload extends Callable<CThis, CArgs, CReturn> & ConcreteNewable<NArgs, NReturn> ? any : OverloadUnionCallableNewable<Overload, PartialOverload, Callable<CThis, CArgs, CReturn>, ConcreteNewable<NArgs, NReturn>> : OverloadUnionCallableNewable<Overload, PartialOverload, Callable<CThis, CArgs, CReturn>, ConcreteNewable<NArgs, NReturn>> : never : never;\nexport type OverloadUnionCallable<Overload extends Callable, PartialOverload, CurrentCallable extends Callable> = OverloadUnionCallableInner<CurrentCallable & Overload, CurrentCallable & PartialOverload, CurrentCallable> | CurrentCallable;\nexport type OverloadUnionCallableInner<Overload extends Callable, PartialOverload, PreviousOverload extends Callable> = PartialOverload extends Overload ? never : Overload extends Callable<infer This, infer Args, infer Return> ? Callable<This, Args, Return> extends PreviousOverload ? PreviousOverload extends Callable<This, Args, Return> ? any : OverloadUnionCallable<Overload, PartialOverload, Callable<This, Args, Return>> : OverloadUnionCallable<Overload, PartialOverload, Callable<This, Args, Return>> : never;\nexport type OverloadUnionNewable<Overload extends AbstractNewable, PartialOverload, CurrentNewable extends ConcreteNewable> = OverloadUnionNewableInner<CurrentNewable & Overload, CurrentNewable & PartialOverload, CurrentNewable> | CurrentNewable;\nexport type OverloadUnionNewableInner<Overload extends AbstractNewable, PartialOverload, PreviousOverload extends ConcreteNewable> = PartialOverload extends Overload ? never : Overload extends AbstractNewable<infer Args, infer Return> ? ConcreteNewable<Args, Return> extends PreviousOverload ? PartialOverload extends ConcreteNewable<Args, Return> ? any : OverloadUnionNewable<Overload, PartialOverload, ConcreteNewable<Args, Return>> : OverloadUnionNewable<Overload, PartialOverload, ConcreteNewable<Args, Return>> : never;\nexport type UnpatchFunction = () => void;\n","import type { AfterHook, UnknownFunction, UnpatchFunction } from '../types';\n/**\n * After hooks allow you to modify the return value of the original function, or to perform some action after the original function is called.\n *\n * ```js\n * import { after } from '@revenge-mod/patcher'\n *\n * const obj = {\n *     method: (a) => a * 2\n * }\n *\n * after(obj, 'method', (result) => {\n *     console.log('After method called with result:', result)\n *     // Modify return value\n *     return result + 1\n * })\n *\n * console.log(obj.method(2)) // 5\n * // CONSOLE OUTPUT:\n * // After method called with result: 4\n * // 5\n * ```\n *\n * @param parent The parent object containing the method to patch.\n * @param key The key of the method to patch.\n * @param hook The hook function to execute after the original method.\n *\n * @returns A function to unpatch.\n */\nexport declare function after<Parent extends Record<Key, UnknownFunction>, Key extends keyof Parent>(parent: Parent, key: Key, hook: AfterHook<Parent[Key]>): UnpatchFunction;\n","import type { BeforeHook, UnknownFunction, UnpatchFunction } from '../types';\n/**\n * Before hooks allow you to modify the arguments passed to the original function, or to perform some action before the original function is called.\n *\n * ```js\n * import { before } from '@revenge-mod/patcher'\n *\n * const obj = {\n *     method: (a) => console.log('Original method called with:', a)\n * }\n *\n * before(obj, 'method', ([a]) => {\n *     console.log('Before method called with:', a)\n *     // Modify arguments by returning new array\n *     return [a + 1]\n * })\n *\n * obj.method(2)\n * // CONSOLE OUTPUT:\n * // Before method called with: 2\n * // Original method called with: 3\n * ```\n *\n * @param parent The parent object containing the method to patch.\n * @param key The key of the method to patch.\n * @param hook The hook function to execute before the original method.\n *\n * @returns A function to unpatch.\n */\nexport declare function before<Parent extends Record<Key, UnknownFunction>, Key extends keyof Parent>(parent: Parent, key: Key, hook: BeforeHook<Parent[Key]>): UnpatchFunction;\n","import type { InsteadHook, UnknownFunction, UnpatchFunction } from '../types';\n/**\n * Instead hooks allow you to completely replace the original function with a new one, while still being able to call the original function if needed.\n *\n * ```js\n * import { instead } from '@revenge-mod/patcher'\n *\n * const obj = {\n *     method: (a) => {\n *         console.log('Original method called with:', a)\n *         return 'original result'\n *     }\n * }\n *\n * instead(obj, 'method', ([a], original) => {\n *     console.log('Instead method called with:', a)\n *     // Call the original function if needed\n *     const originalResult = original('modified')\n *     console.log('Original method was called')\n *\n *     // Return a new value\n *     return 'new value'\n * })\n *\n * console.log(obj.method('test')) // 'new value'\n * // CONSOLE OUTPUT:\n * // Instead method called with: test\n * // Original method called with: modified\n * // Original method was called\n * // new value\n * ```\n *\n * @param parent The parent object containing the method to patch.\n * @param key The key of the method to patch.\n * @param hook The hook function to execute instead of the original method.\n *\n * @return A function to unpatch.\n */\nexport declare function instead<Parent extends Record<Key, UnknownFunction>, Key extends keyof Parent>(parent: Parent, key: Key, hook: InsteadHook<Parent[Key]>): UnpatchFunction;\n","export * from './hooks/after';\nexport * from './hooks/before';\nexport * from './hooks/instead';\n","export declare namespace ReactNative {\n    namespace AssetsRegistry {\n        type AssetDestPathResolver = 'android' | 'generic';\n        interface PackagerAsset {\n            __packager_asset: boolean;\n            fileSystemLocation?: string;\n            httpServerLocation?: string;\n            width?: number;\n            height?: number;\n            scales: number[];\n            hash: string;\n            name: string;\n            type: string;\n            resolver?: AssetDestPathResolver;\n        }\n    }\n    interface AssetsRegistry {\n        registerAsset(asset: AssetsRegistry.PackagerAsset): number;\n        getAssetByID(assetId: number): AssetsRegistry.PackagerAsset;\n    }\n}\nexport type RunApplicationCallback = () => any;\n","import type { Metro } from '@revenge-mod/modules/types';\nimport type { ReactNative } from '@revenge-mod/react/types';\nexport type Asset = PackagerAsset | CustomAsset;\nexport type AssetId = number;\nexport type PackagerAsset = ReactNative.AssetsRegistry.PackagerAsset;\nexport interface CustomAsset extends Pick<PackagerAsset, 'name' | 'width' | 'height' | 'type' | 'id'> {\n    uri: string;\n    moduleId?: undefined;\n}\nexport type RegisterableAsset = Omit<CustomAsset, 'id'>;\ndeclare module '@revenge-mod/react/types' {\n    namespace ReactNative {\n        namespace AssetsRegistry {\n            interface PackagerAsset {\n                id: AssetId;\n                moduleId: Metro.ModuleID;\n            }\n        }\n    }\n}\n","import type { Metro } from '@revenge-mod/modules/types';\nimport type { ReactNative } from '@revenge-mod/react/types';\n/**\n * If you need to use this ID, unproxify {@link AssetsRegistry} first.\n *\n * ```js\n * preinit() {\n *   unproxify(AssetsRegistry)\n *   // Module ID will now be set!\n *   AssetsRegistryModuleId // ...\n * }\n * ```\n */\nexport declare let AssetsRegistryModuleId: Metro.ModuleID | undefined;\nexport declare let AssetsRegistry: ReactNative.AssetsRegistry;\n","import type { Asset, AssetId, CustomAsset, PackagerAsset, RegisterableAsset } from './types';\nexport { AssetsRegistry, AssetsRegistryModuleId, } from './preinit';\n/**\n * Set the preferred asset type. This is used to determine which asset to use when multiple types are available.\n *\n * @param type The preferred asset type.\n */\nexport declare function setPreferredAssetType(type: Asset['type']): void;\n/**\n * Yields all assets, both packager and custom.\n */\nexport declare function getAssets(): Generator<Asset>;\n/**\n * Yields all registered custom assets.\n */\nexport declare function getCustomAssets(): Generator<CustomAsset>;\n/**\n * Yields all registered packager assets, including ones with same name but different types.\n */\nexport declare function getPackagerAssets(): Generator<PackagerAsset>;\n/**\n * Get an asset by its name.\n * If more than one asset is registered with the same name, this will return the one with the preferred type, or the first registered one.\n *\n * @param name The asset name.\n * @param type The preferred asset type, defaults to the current preferred type.\n */\nexport declare function getAssetByName(name: string, type?: Asset['type']): Asset | undefined;\n/**\n * Gets all assets matching the name.\n *\n * @param name The asset name.\n * @returns A record keyed by the type of the asset, with the value being the asset itself.\n */\nexport declare function getAssetsByName(name: string): Record<Asset['type'], Asset> | undefined;\n/**\n * Get an asset ID by its name.\n *\n * If more than one asset is registered with the same name, this will return the one with the preferred type.\n *\n * Unless **explicitly** calling with a preferred type,\n * another asset with type mismatching the {@link setPreferredAssetType current preferred type} may be returned as a fallback.\n *\n * @param name The asset name.\n * @param type The preferred asset type, defaults to the current preferred type.\n */\nexport declare function getAssetIdByName(name: string, type?: Asset['type']): AssetId | undefined;\n/**\n * Register an asset with the given name.\n *\n * @param asset The asset to register.\n * @returns The asset ID.\n */\nexport declare function registerAsset(asset: RegisterableAsset): AssetId;\n/**\n * Override an asset with a custom asset.\n *\n * @param asset The asset to override.\n * @param override The custom asset to override with.\n */\nexport declare function addAssetOverride(asset: Asset, override: Asset): void;\n/**\n * Remove an asset override.\n *\n * @param asset The asset to remove the override for.\n * @returns The asset that was removed.\n */\nexport declare function removeAssetOverride(asset: Asset): boolean;\n","import type { If } from '@revenge-mod/utils/types';\nimport type { Metro } from '../types';\nimport type { Filter } from './filters';\nexport interface RunFilterOptions {\n    /**\n     * Whether to skip checking the default export.\n     *\n     * @default false\n     */\n    skipDefault?: boolean;\n    /**\n     * Whether to allow initializing modules to check their exports.\n     *\n     * @default true\n     */\n    initialize?: boolean;\n}\nexport type RunFilterReturnExportsOptions<ReturnNamespace extends boolean = boolean> = RunFilterOptions & If<ReturnNamespace, {\n    /**\n     * Whether to return the whole module with all exports instead of just the default export **if the default export matches**.\n     *\n     * @default false\n     */\n    returnNamespace: true;\n}, {\n    returnNamespace?: false;\n}>;\nexport declare const FilterResultFlags: {\n    /**\n     * A module was found, without exports filtering.\n     */\n    Found: number;\n    /**\n     * A module was found, and the filter matched the default export.\n     */\n    Default: number;\n    /**\n     * A module was found, and the filter matched the module namespace.\n     */\n    Namespace: number;\n};\nexport type FilterResultFlag = (typeof FilterResultFlags)[keyof typeof FilterResultFlags];\nexport declare const FilterResultFlagToHumanReadable: Record<FilterResultFlag, string>;\nexport declare function runFilter(filter: Filter<any, false>, id: Metro.ModuleID): FilterResultFlag | undefined;\nexport declare function runFilter(filter: Filter, id: Metro.ModuleID, exports: Metro.ModuleExports, options?: RunFilterOptions): FilterResultFlag | undefined;\nexport declare function exportsFromFilterResultFlag(flag: FilterResultFlag, exports: Metro.ModuleExports, options?: RunFilterReturnExportsOptions): any;\n","import type { If, Nullish } from '@revenge-mod/utils/types';\nimport type { MaybeDefaultExportMatched, Metro } from '../types';\nimport type { RunFilterReturnExportsOptions } from './_internal';\nimport type { Filter, FilterResult } from './filters';\ntype LookupModulesOptionsWithAll<A extends boolean> = If<A, {\n    /**\n     * Whether to include all modules in the lookup, including blacklisted ones.\n     *\n     * **This overrides {@link BaseLookupModulesOptions.initialized} and {@link BaseLookupModulesOptions.uninitialized}.**\n     */\n    all: A;\n}, {\n    /**\n     * You can only use `all` with exportsless filters!\n     */\n    all?: false;\n}>;\ntype LookupModulesOptionsWithInitializedUninitialized<U extends boolean> = {\n    /**\n     * Whether to include initialized modules in the lookup.\n     *\n     * @default true\n     */\n    initialized?: boolean;\n} & If<U, {\n    /**\n     * Whether to include uninitialized modules in the lookup.\n     *\n     * Set {@link BaseLookupModulesOptions.initialize} `true` to initialize uninitialized modules.\n     *\n     * @default false\n     */\n    uninitialized: U;\n}, {\n    /**\n     * You can only use `uninitialized` with exportsless filters!\n     */\n    uninitialized?: false;\n}>;\nexport type LookupModulesOptions<ReturnNamespace extends boolean = boolean, Uninitialized extends boolean = boolean, All extends boolean = boolean, Initialize extends boolean = boolean> = RunFilterReturnExportsOptions<ReturnNamespace> & {\n    /**\n     * Whether to use cached lookup results.\n     */\n    cached?: boolean;\n} & If<Initialize, {\n    /**\n     * Whether to initialize matching uninitialized modules.\n     *\n     * **This will initialize any modules that match the exportsless filter and may cause unintended side effects.**\n     */\n    initialize?: Initialize;\n}, {\n    initialize: false;\n}> & If<All, LookupModulesOptionsWithAll<All> & {\n    [K in keyof LookupModulesOptionsWithInitializedUninitialized<Uninitialized>]?: never;\n}, LookupModulesOptionsWithInitializedUninitialized<Uninitialized> & {\n    [K in keyof LookupModulesOptionsWithAll<All>]?: never;\n}>;\nexport type LookupModulesResult<F extends Filter, O extends LookupModulesOptions> = [\n    exports: O extends LookupModulesOptions<boolean, boolean, boolean, false> ? LookupFilterResult<F, O> | Nullish : LookupFilterResult<F, O>,\n    id: Metro.ModuleID\n];\ntype LookupFilterResult<F extends Filter, O extends LookupModulesOptions> = O extends RunFilterReturnExportsOptions<true> ? MaybeDefaultExportMatched<FilterResult<F>> : FilterResult<F>;\ndeclare const NotFoundResult: [];\ntype LookupNotFoundResult = typeof NotFoundResult;\n/**\n * Lookup modules.\n *\n * You can lookup uninitialized modules by passing `options.uninitialized` when filtering via exportsless filters (eg. `byDependencies`).\n * Use the `moduleStateAware` helper to filter dynamically based on whether the module is initialized or not.\n *\n * @param filter The filter to use.\n * @param options The options to use for the lookup.\n * @returns A generator that yields the module exports that match the filter.\n *\n * @example\n * ```ts\n * const lookup = lookupModules(byProps('x'))\n * // Log all module exports that has exports.x\n * for (const exports of lookup) console.log(exports)\n * ```\n */\nexport declare function lookupModules<F extends Filter>(filter: F): Generator<LookupModulesResult<F, object>, undefined>;\nexport declare function lookupModules<F extends Filter, const O extends F extends Filter<any, infer WE> ? If<WE, LookupModulesOptions<boolean, false, false>, LookupModulesOptions> : never>(filter: F, options: O): Generator<LookupModulesResult<F, O>, undefined>;\n/**\n * Lookup a module. Skipping creating a `Generator`.\n *\n * @see {@link lookupModules} for more documentation.\n *\n * @param filter The filter to use.\n * @param options The options to use for the lookup.\n * @returns The first module exports that match the filter.\n *\n * @example\n * ```ts\n * const React = lookupModule(byProps<typeof import('react')>('createElement'))\n * ```\n */\nexport declare function lookupModule<F extends Filter>(filter: F): LookupModulesResult<F, object> | LookupNotFoundResult;\nexport declare function lookupModule<F extends Filter, const O extends F extends Filter<any, infer WE> ? If<WE, LookupModulesOptions<boolean, false, false>, LookupModulesOptions> : never>(filter: F, options: O): LookupModulesResult<F, O> | LookupNotFoundResult;\n/**\n * Lookup an initialized module by its imported path.\n *\n * Think of it as if you are doing a `import * as exports from path`, the app must have already initialized the module or this will return `undefined`.\n *\n * @param path The path to lookup the module by.\n * @returns The module exports if the module is initialized, or `undefined` if the module is not found or not initialized.\n *\n * @example\n * ```ts\n * const [{ default: Logger }] = lookupModuleByImportedPath<{ default: typeof DiscordModules.Logger }>('modules/debug/Logger.tsx')\n * ```\n */\nexport declare function lookupModuleByImportedPath<T = any>(path: string): [exports: T, id: Metro.ModuleID] | [];\nexport {};\n","import type { MaybeDefaultExportMatched, Metro } from '../types';\nimport type { RunFilterReturnExportsOptions } from './_internal';\nimport type { Filter, FilterResult } from './filters';\nexport interface BaseWaitForModulesOptions<All extends boolean = boolean> {\n    /**\n     * Whether to include all modules, including blacklisted ones.\n     *\n     * @default false\n     */\n    all?: All;\n}\nexport type WaitForModulesUnsubscribeFunction = () => void;\nexport type WaitForModulesCallback<T> = (exports: T, id: Metro.ModuleID) => any;\nexport type WaitForModulesOptions<ReturnNamespace extends boolean = boolean, All extends boolean = boolean> = RunFilterReturnExportsOptions<ReturnNamespace> & BaseWaitForModulesOptions<All> & {\n    /**\n     * Use cached results **only** (if possible).\n     * If there is no cache result, this works as if you did not pass this option at all.\n     *\n     * By default, waits cache results but does not use them, because new modules may still be found.\n     * Use this option as an optimization if you are sure that you don't need to find new modules once results are cached.\n     *\n     * @default false\n     */\n    cached?: boolean;\n};\nexport type WaitForModulesResult<F extends Filter, O extends WaitForModulesOptions> = O extends RunFilterReturnExportsOptions<true> ? MaybeDefaultExportMatched<FilterResult<F>> : FilterResult<F>;\n/**\n * Wait for modules to initialize. **Callback won't be called if the module is already initialized!**\n *\n * @param filter The filter to use.\n * @param callback The callback to call when matching modules are initialized.\n * @param options The options to use for the wait.\n * @returns A function to unsubscribe.\n *\n * @example\n * ```ts\n * const unsub = waitForModules(\n *   byName<typeof import('@shopify/flash-list')>('FlashList'),\n *   // (exports: typeof import('@shopify/flash-list'), id: Metro.ModuleID) => any\n *   (exports, id) => {\n *     unsub()\n *     // Do something with the module...\n *   }\n * )\n * ```\n */\nexport declare function waitForModules<F extends Filter>(filter: F, callback: WaitForModulesCallback<WaitForModulesResult<F, object>>): WaitForModulesUnsubscribeFunction;\nexport declare function waitForModules<F extends O extends WaitForModulesOptions<boolean, true> ? Filter<any, false> : Filter, O extends WaitForModulesOptions>(filter: F, callback: WaitForModulesCallback<WaitForModulesResult<F, O>>, options: O): WaitForModulesUnsubscribeFunction;\n/**\n * Wait for a module to initialize by its imported path. **Callback won't be called if the module is already initialized!**\n *\n * Once callback is called, the subscription will be removed automatically, because modules have unique imported paths.\n *\n * Think of it as if you are doing `import * as exports from path`, and you are also waiting for the app to initialize the module by itself.\n *\n * @param path The path to wait for.\n * @param callback The callback to call once the module is initialized.\n * @param options The options to use for the wait.\n * @returns A function to unsubscribe.\n *\n * @example\n * ```ts\n * waitForModuleByImportedPath(\n *   'utils/PlatformUtils.tsx',\n *   (exports, id) => {\n *      // Do something with the module...\n *   }\n * )\n * ```\n */\nexport declare function waitForModuleByImportedPath<T = any>(path: string, callback: WaitForModulesCallback<T>, options?: BaseWaitForModulesOptions): WaitForModulesUnsubscribeFunction;\n","import type { If } from '@revenge-mod/utils/types';\nimport type { MaybeDefaultExportMatched, Metro } from '../types';\nimport type { RunFilterReturnExportsOptions } from './_internal';\nimport type { Filter, FilterResult } from './filters';\nimport type { LookupModulesOptions } from './lookup';\nimport type { WaitForModulesOptions } from './wait';\nexport type GetModuleOptions<ReturnNamespace extends boolean = boolean, Uninitialized extends boolean = boolean, All extends boolean = boolean> = WaitForModulesOptions<ReturnNamespace> & LookupModulesOptions<ReturnNamespace, Uninitialized, All, true> & {\n    /**\n     * The maximum number of modules to get.\n     *\n     * @default 1\n     */\n    max?: number;\n};\nexport type GetModuleResult<F extends Filter, O extends GetModuleOptions> = O extends RunFilterReturnExportsOptions<true> ? MaybeDefaultExportMatched<FilterResult<F>> : FilterResult<F>;\nexport type GetModuleCallback<T> = (exports: T, id: Metro.ModuleID) => any;\nexport type GetModuleUnsubscribeFunction = () => void;\n/**\n * Get modules matching the filter.\n *\n * This is a combination of {@link lookupModule} and {@link waitForModules}.\n *\n * @param filter The filter to use to find the module.\n * @param options The options to use for the find.\n * @returns A promise that resolves to the module's exports or rejects if the find is aborted before a module is found.\n *\n * @example\n * ```ts\n * getModule(byProps<typeof import('react')>('createElement'), React => {\n *   // Immediately called because React is always initialized when plugins are loaded\n * })\n *\n * getModule(byProps<typeof import('@shopify/flash-list')>('FlashList'), FlashList => {\n *   // Called when the module is initialized\n * })\n *\n * // Get multiple modules matching the filter\n * getModule(byProps<ReactNative.AssetsRegistry>('registerAsset'), AssetsRegistry => {\n *   // Called 2 times, once for each module that matches the filter\n * }, { max: 2 })\n * ```\n */\nexport declare function getModule<F extends Filter>(filter: F, callback: GetModuleCallback<FilterResult<F>>): GetModuleUnsubscribeFunction;\nexport declare function getModule<F extends Filter, const O extends F extends Filter<any, infer WE> ? If<WE, GetModuleOptions<boolean, boolean, false>, GetModuleOptions> : never>(filter: F, callback: GetModuleCallback<FilterResult<F>>, options: O): GetModuleUnsubscribeFunction;\n/**\n * Get a single module by its imported path.\n * Once a module is found, unsubscription happens automatically, since imported paths are unique.\n *\n * @param path The path to find the module by.\n * @param options The options to use for the find.\n * @returns A promise that resolves to the module's exports or rejects if the find is aborted before the module is found.\n *\n * @example\n * ```ts\n * getModuleByImportedPath('modules/main_tabs_v2/native/settings/SettingsConstants.tsx', SettingsConstants => {\n *   console.log('Settings page opened') // Logs once the module is initialized\n * })\n * ```\n */\nexport declare function getModuleByImportedPath<T>(path: string, callback: GetModuleCallback<T>): GetModuleUnsubscribeFunction;\n","import type { Metro } from '../../types';\nexport type ModuleFirstRequiredCallback = (id: Metro.ModuleID) => void;\nexport type ModuleInitializedCallback = (id: Metro.ModuleID, exports: Metro.ModuleExports) => void;\nexport type ModuleFinishedImportingCallback = (id: Metro.ModuleID, path: string) => void;\n/**\n * Registers a callback to be called when any module is initialized.\n *\n * This runs after the module factory has been executed, but before the module is considered initialized by Metro.\n * However, Revenge APIs will consider the module initialized at this point.\n *\n * @see {@link initializedModuleHasBadExports} to avoid bad module exports.\n *\n * @param callback The callback to be called.\n * @returns A function that unregisters the callback.\n */\nexport declare function onAnyModuleInitialized(callback: ModuleInitializedCallback): () => void;\n/**\n * Registers a callback to be called when a specific module is initialized.\n *\n * This runs after the module factory has been executed, but before the module is considered initialized by Metro.\n * However, Revenge APIs will consider the module initialized at this point.\n *\n * @see {@link initializedModuleHasBadExports} to avoid bad module exports.\n *\n * @param id The ID of the module.\n * @param callback The callback to be called.\n * @returns A function that unregisters the callback.\n */\nexport declare function onModuleInitialized(id: Metro.ModuleID, callback: ModuleInitializedCallback): () => void;\n/**\n * Registers a callback to be called when a module with a specific import path is initialized.\n *\n * @see {@link initializedModuleHasBadExports} to avoid bad module exports.\n *\n * @param callback The callback to be called.\n * @returns A function that unregisters the callback.\n */\nexport declare function onModuleFinishedImporting(callback: ModuleFinishedImportingCallback): () => void;\n/**\n * Registers a callback to be called when any module is being initialized.\n *\n * This runs before the module factory is executed.\n *\n * @see {@link initializedModuleHasBadExports} to avoid bad module exports.\n *\n * @param callback The callback to be called.\n * @returns A function that unregisters the callback.\n */\nexport declare function onAnyModuleFirstRequired(callback: ModuleFirstRequiredCallback): () => void;\n/**\n * Registers a callback to be called when a specific module is being initialized.\n *\n * This runs before the module factory is executed.\n *\n * @see {@link initializedModuleHasBadExports} to avoid bad module exports.\n *\n * @param id The ID of the module.\n * @param callback The callback to be called.\n * @returns A function that unregisters the callback.\n */\nexport declare function onModuleFirstRequired(id: Metro.ModuleID, callback: ModuleFirstRequiredCallback): () => void;\n","import type { Metro } from '../types';\n/**\n * Returns the dependencies of a module.\n * @param id The module ID.\n * @returns The dependency map of the module, or `undefined` if the module does not exist.\n */\nexport declare function getModuleDependencies(id: Metro.ModuleID): Metro.DependencyMap | undefined;\n/**\n * Returns whether a module is initialized.\n * @param id The module ID.\n * @returns Non-zero number if the module is initialized, `0` if it is not initialized or does not exist.\n */\nexport declare function isModuleInitialized(id: Metro.ModuleID): number | undefined;\n/**\n * Returns the exports of an initialized module.\n *\n * @see {@link isModuleInitialized} to check if the module is initialized.\n *\n * @param id The module ID.\n * @returns The exports of the module, or `undefined` if the module is not initialized or does not exist.\n */\nexport declare function getInitializedModuleExports(id: Metro.ModuleID): Metro.ModuleExports | undefined;\n/**\n * Returns whether a particular module export is bad. This is used for filter functions to check whether an export is filterable.\n * @param exp The export to check.\n */\nexport declare function isModuleExportBad(exp: Metro.ModuleExports[PropertyKey]): boolean;\n","/**\n * Backwards compatible way to get a native module. Throws an error if the module is not found.\n *\n * Use this as a replacement to `TurboModuleRegistry.getEnforcing()`.\n *\n * @see {@link https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/TurboModule/TurboModuleRegistry.js#L19-L39 React Native's source}\n *\n * @param name The name of the native module to get.\n */\nexport declare function getNativeModule<T>(name: string): T | null;\n","import * as PluginApiModulesFindersFilters from '@revenge-mod/modules/finders/filters';\nimport * as PluginApiModulesFindersGet from '@revenge-mod/modules/finders/get';\nimport * as PluginApiModulesFindersLookup from '@revenge-mod/modules/finders/lookup';\nimport * as PluginApiModulesFindersWait from '@revenge-mod/modules/finders/wait';\nimport * as PluginApiModulesMetroSubscriptions from '@revenge-mod/modules/metro/subscriptions';\nimport * as PluginApiModulesMetroUtils from '@revenge-mod/modules/metro/utils';\nimport * as PluginApiModulesNative_ from '@revenge-mod/modules/native';\nexport interface PluginApiModules {\n    finders: PluginApiModulesFinders;\n    metro: PluginApiModulesMetro;\n    native: PluginApiModulesNative;\n}\nexport type PluginApiModulesNative = typeof PluginApiModulesNative_;\nexport type PluginApiModulesMetro = typeof PluginApiModulesMetroUtils & typeof PluginApiModulesMetroSubscriptions;\nexport type PluginApiModulesFinders = typeof PluginApiModulesFindersGet & typeof PluginApiModulesFindersLookup & typeof PluginApiModulesFindersWait & {\n    filters: typeof PluginApiModulesFindersFilters;\n};\nexport declare const modules: PluginApiModules;\n","/**\n * The plugin flags.\n */\nexport declare const PluginFlags: {\n    /**\n     * The plugin is enabled.\n     */\n    Enabled: number;\n    /**\n     * The plugin requires a reload to apply changes.\n     */\n    ReloadRequired: number;\n    /**\n     * The plugin has errors.\n     */\n    Errored: number;\n    /**\n     * The plugin was enabled after the app was started.\n     * This is usually caused by a newly installed plugin, or a plugin that was re-enabled.\n     */\n    EnabledLate: number;\n};\n/**\n * The plugin status.\n */\nexport declare const PluginStatus: {\n    PreIniting: number;\n    PreInited: number;\n    Initing: number;\n    Inited: number;\n    Starting: number;\n    Started: number;\n    Stopping: number;\n};\nexport declare const PluginsStorageDirectory = \"revenge/plugins/storage\";\n","export interface PluginApiPlugins {\n    constants: typeof import('@revenge-mod/plugins/constants');\n}\nexport declare const plugins: PluginApiPlugins;\n","import type { Metro } from '@revenge-mod/modules/types';\nexport declare let ReactModuleId: Metro.ModuleID;\nexport declare let ReactNativeModuleId: Metro.ModuleID;\nexport declare let ReactJSXRuntimeModuleId: Metro.ModuleID;\nexport declare let React: typeof import('react');\nexport declare let ReactNative: typeof import('react-native');\nexport declare let ReactJSXRuntime: typeof import('react/jsx-runtime');\n","import type { ElementType, JSX, Key, ReactElement } from 'react';\nimport type { ReactJSXRuntime } from '..';\nexport type AnyJSXFactoryFunction = (typeof ReactJSXRuntime)['jsx' | 'jsxs'];\nexport type BeforeJSXCallback<E extends ElementType> = (args: [element: E, props: ElementTypeProps<E>, key?: Key | undefined]) => Parameters<AnyJSXFactoryFunction>;\nexport type InsteadJSXCallback<E extends ElementType> = (args: [element: E, props: ElementTypeProps<E>, key?: Key | undefined], jsx: AnyJSXFactoryFunction) => ReturnType<AnyJSXFactoryFunction> | null;\nexport type AfterJSXCallback<E extends ElementType> = (fiber: ReactElement<ElementTypeProps<E>, E>) => ReturnType<AnyJSXFactoryFunction> | null;\ntype ElementTypeProps<E extends ElementType> = E extends ElementType<infer Props> ? Props : E extends keyof JSX.IntrinsicElements ? JSX.IntrinsicElements[E] : never;\n/**\n * Registers a hook to be called after a JSX element with the specified type is created.\n *\n * @param type The type of the element.\n * @param patch The hook.\n * @returns A function to unpatch.\n */\nexport declare function afterJSX<E extends ElementType>(type: E, patch: AfterJSXCallback<E>): () => boolean;\n/**\n * Registers a hook to be called before a JSX element with the specified type is created.\n *\n * @param type The type of the element.\n * @param patch The hook.\n * @returns A function to unpatch.\n */\nexport declare function beforeJSX<E extends ElementType>(type: E, patch: BeforeJSXCallback<E>): () => boolean;\n/**\n * Registers a callback to run instead when a JSX element with the specified type is created.\n *\n * @param type The type of the element.\n * @param patch The hook.\n * @returns A function to unpatch.\n */\nexport declare function insteadJSX<E extends ElementType>(type: E, patch: InsteadJSXCallback<E>): () => boolean;\nexport {};\n","import type { RunApplicationCallback } from '@revenge-mod/react/types';\n/**\n * Registers a callback to be run when a call to {@link AppRegistry.runApplication} is made.\n *\n * @param callback The callback to be called.\n * @returns A function to unregister the callback.\n */\nexport declare function onRunApplication(callback: RunApplicationCallback): () => void;\n/**\n * Registers a callback to be run when a call to {@link AppRegistry.runApplication} is finished.\n *\n * @param callback The callback to be called.\n * @returns A function to unregister the callback.\n */\nexport declare function onRunApplicationFinished(callback: RunApplicationCallback): () => void;\n","import * as PluginApiReact_ from '@revenge-mod/react';\nimport * as PluginApiReactJsxRuntime from '@revenge-mod/react/jsx-runtime';\nimport * as PluginApiReactNative from '@revenge-mod/react/native';\nexport type PluginApiReact = typeof PluginApiReact_ & {\n    jsxRuntime: typeof PluginApiReactJsxRuntime;\n    native: typeof PluginApiReactNative;\n};\nexport declare const react: PluginApiReact;\n","import type { FunctionComponent } from 'react';\nimport type { PluginApiModules } from './apis/modules';\nimport type { PluginApiPlugins } from './apis/plugins';\nimport type { PluginApiReact } from './apis/react';\nexport interface PluginApiExtensionsOptions {\n}\n/**\n * The unscoped plugin API (very limited). This API is available as a global for plugins.\n * Available in the `preInit` phase.\n */\nexport interface UnscopedPreInitPluginApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> {\n    modules: PluginApiModules;\n    patcher: typeof import('@revenge-mod/patcher');\n    plugins: PluginApiPlugins;\n    react: PluginApiReact;\n}\n/**\n * The unscoped plugin API (limited). This API is available as a global for plugins.\n * Available in the `init` phase.\n */\nexport interface UnscopedInitPluginApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> extends UnscopedPreInitPluginApi<O> {\n    assets: typeof import('@revenge-mod/assets');\n}\n/**\n * The unscoped plugin API. This API is available as a global for plugins.\n * Available in the `start` and `stop` phase.\n */\nexport interface UnscopedPluginApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> extends UnscopedInitPluginApi<O> {\n}\n/**\n * A cleanup function that can be registered to be called when the plugin is stopped.\n */\nexport type PluginCleanup = () => any;\n/**\n * Registers cleanup functions to be called when the plugin is stopped.\n *\n * @example\n * ```ts\n * cleanup(unpatch)\n * cleanup(unsub)\n * ```\n */\nexport type PluginCleanupApi = (...fns: PluginCleanup[]) => void;\n/**\n * Decorates the plugin API for the dependents of the plugin with a decorator function.\n * @param decorator The decorator function to apply.\n *\n * @example\n * ```ts\n * // Your plugin's `init` function:\n * init({ decorate }) {\n *   decorate((plugin, options) => {\n *     plugin.api.customMethod = () => {\n *       console.log('Custom method called!')\n *     }\n *   })\n * }\n *\n * // In another plugin, with your plugin as a dependency:\n * init({ customMethod }) {\n *   customMethod() // Logs: \"Custom method called!\"\n * }\n * ```\n */\nexport type PluginDecorateApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions, S extends keyof PluginApiInLifecycleMap<O> = keyof PluginApiInLifecycleMap<O>> = (decorator: PluginApiDecorator<O, S>) => void;\n/**\n * The decorator function that modifies the plugin API.\n *\n * @param plugin The plugin being decorated.\n * @param options The options the plugin passed.\n *\n * @see {@link PluginDecorateApi}\n */\nexport type PluginApiDecorator<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions, S extends keyof PluginApiInLifecycleMap<O> = keyof PluginApiInLifecycleMap<O>> = (plugin: Plugin<O, S>, options: O) => void;\n/**\n * The plugin API (very limited).\n * Available in the `preInit` phase.\n */\nexport interface PreInitPluginApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> {\n    decorate: PluginDecorateApi<O, 'PreInit'>;\n    unscoped: UnscopedPreInitPluginApi;\n    cleanup: PluginCleanupApi;\n    plugin: Plugin;\n}\n/**\n * The plugin API (limited).\n * Available in the `init` phase.\n */\nexport interface InitPluginApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> extends PreInitPluginApi<O> {\n    decorate: PluginDecorateApi<O, 'Init'>;\n    unscoped: UnscopedInitPluginApi;\n}\n/**\n * The plugin API.\n * Available in the `start` and `stop` phase.\n */\nexport interface PluginApi<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> extends InitPluginApi<O> {\n    decorate: PluginDecorateApi<O, 'Start'>;\n    unscoped: UnscopedPluginApi;\n}\n/**\n * The plugin manifest.\n */\nexport interface PluginManifest {\n    /**\n     * The unique identifier for the plugin.\n     */\n    id: string;\n    /**\n     * The name of the plugin.\n     */\n    name: string;\n    /**\n     * The author of the plugin.\n     */\n    author: string;\n    /**\n     * The description of the plugin.\n     */\n    description: string;\n    /**\n     * The icon of the plugin.\n     */\n    icon?: string;\n    /**\n     * The dependencies of the plugin.\n     */\n    dependencies?: PluginDependency[];\n}\nexport interface PluginDependency {\n    /**\n     * The ID of this dependency.\n     */\n    id: string;\n}\nexport interface PluginOptions<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> extends PluginLifecycles<O> {\n    SettingsComponent?: PluginSettingsComponent<O>;\n}\n/**\n * The plugin lifecycles.\n */\nexport interface PluginLifecycles<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> {\n    /**\n     * Runs as soon as possible with very limited APIs.\n     * Before the index module (module 0)'s factory is run.\n     *\n     * @param api Plugin API (very limited).\n     */\n    preInit?: (api: PreInitPluginApi<O>) => any;\n    /**\n     * Runs as soon as all important modules are initialized.\n     * After the index module (module 0)'s factory is run.\n     *\n     * @param api Plugin API (limited).\n     */\n    init?: (api: InitPluginApi<O>) => any;\n    /**\n     * Runs when the plugin can be started with all APIs available.\n     *\n     * @param api Plugin API.\n     */\n    start?: (api: PluginApi<O>) => any;\n    /**\n     * Runs when the plugin is stopped.\n     *\n     * @param api Plugin API.\n     */\n    stop?: (api: PluginApi<O>) => any;\n}\nexport interface Plugin<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions, S extends keyof PluginApiInLifecycleMap<O> = keyof PluginApiInLifecycleMap<O>> {\n    manifest: PluginManifest;\n    lifecycles: PluginLifecycles<O>;\n    /**\n     * @see {@link PluginFlags}\n     */\n    flags: number;\n    /**\n     * @see {@link PluginStatus}\n     */\n    status: number;\n    /**\n     * Errors encountered during the plugin lifecycles.\n     */\n    errors: unknown[];\n    SettingsComponent?: PluginSettingsComponent<O>;\n    /**\n     * Disable the plugin.\n     * This will also stop the plugin if it is running.\n     */\n    disable(): Promise<void>;\n    /**\n     * Stop the plugin.\n     */\n    stop(): Promise<void>;\n    /**\n     * The plugin API.\n     *\n     * Not recommended to use this directly.\n     */\n    api: PluginApiInLifecycleMap<O>[S];\n}\n/**\n * The plugin API in a specific stage.\n */\nexport type PluginApiInLifecycleMap<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> = {\n    Register: undefined;\n    PreInit: PreInitPluginApi<O>;\n    Init: InitPluginApi<O>;\n    Start: PluginApi<O>;\n};\n/**\n * The component that renders the plugin settings page.\n */\nexport interface PluginSettingsComponent<O extends PluginApiExtensionsOptions = PluginApiExtensionsOptions> extends FunctionComponent<{\n    api: PluginApi<O>;\n}> {\n}\n"],"mappings":"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C,GUsCjKqC,EVtCiK,CUsC9JlC,UVtCuK3H,EAAAA;EAAQ;;;;;EAAgG,UAAKG,CAAAA,EU4C1QwH,UV5C0QxH;CAAI,EAAA;EAA5H,UAAA,EAAA,KAAA;AACnK,CAAA,CAAA,GU8CK0J,EV9CO9G,CU8CJyH,GV9CIzH,EU8CCsE,2BV9CU,CU8CkBmD,GV9ClB,CAAA,GAAA,QAAA,MU+CPjD,gDV/CO,CU+C0CgD,aV/C1C,CAAA,IAAA,KAAA,EAAA,EUgDpBhD,gDVhD+BvE,CUgDkBuH,aVhDlBvH,CAAAA,GAAAA,QAAkBA,MUiDpCqE,2BVjDoCrE,CUiDRwH,GVjDQxH,CAAAA,IAAAA,KAAAA,EAAe,CAAA;AAAIrC,KUmD3DmH,mBVnD2DnH,CAAAA,UUmD7BsJ,MVnD6BtJ,EAAAA,UUmDXwJ,oBVnDWxJ,CAAAA,GAAAA,CAAa,OAAoC6G,EUoD3GiJ,CVpD2GjJ,SUoDjG2C,oBVpDiG3C,CAAAA,OAAAA,EAAAA,OAAAA,EAAAA,OAAAA,EAAAA,KAAAA,CAAAA,GUoDxCS,kBVpDwCT,CUoDrBmD,CVpDqBnD,EUoDlBiJ,CVpDkBjJ,CAAAA,GUoDbT,OVpDaS,GUoDHS,kBVpDGT,CUoDgBmD,CVpDhBnD,EUoDmBiJ,CVpDnBjJ,CAAAA,EAAC,EAAA,EUqDjHqG,KAAAA,CAAME,QVrD0JvB,CAAC;KUuDpKvE,kBVvD+PT,CAAAA,UUuDlOyC,MVvDkOzC,EAAAA,UUuDhN2C,oBVvDgN3C,CAAAA,GUuDxLiJ,CVvDwLjJ,SUuD9KwC,6BVvD8KxC,CAAAA,IAAAA,CAAAA,GUuDxIsC,yBVvDwItC,CUuD9G0C,YVvD8G1C,CUuDjGmD,CVvDiGnD,CAAAA,CAAAA,GUuD3F0C,YVvD2F1C,CUuD9EmD,CVvD8EnD,CAAAA;cUwDtPW,cVxDgQnI,EAAAA,EAAAA;KUyDzQoI,oBAAAA,GVzDiUlI,OUyDnSiI,cVzDmSjI;;;;;;;;;;AAAnE;AACnQ;;;;;;;AAAqKsH,iBU0E7Ia,aV1E6Ib,CAAAA,UU0ErHyC,MV1EqHzC,CAAAA,CAAAA,MAAAA,EU0ErGmD,CV1EqGnD,CAAAA,EU0EjGc,SV1EiGd,CU0EvFM,mBV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,cAAAA,UAAwBT;qBACbC;iBACJC;;;;UCDFQ,0BAAAA;;;AvBHjB;;AAA8BrQ,UuBSbsQ,wBvBTatQ,CAAAA,UuBSsBqQ,0BvBTtBrQ,GuBSmDqQ,0BvBTnDrQ,CAAAA,CAAAA;EAAQ,OAAGC,EuBU5BiQ,gBvBV4BjQ;EAAe,OAAA,EAAA,OuBU3BsQ,evBV2B;EAC5CvQ,OAAAA,EuBWCmQ,gBvBXO;EAAA,KAAA,EuBYTC,cvBZS;;;;AAAiH;AACrI;AAA2B,UuBiBVI,qBvBjBU,CAAA,UuBiBsBH,0BvBjBtB,GuBiBmDA,0BvBjBnD,CAAA,SuBiBuFC,wBvBjBvF,CuBiBgHG,CvBjBhH,CAAA,CAAA;EAAA,MAAqFtQ,EAAAA,OuBiB4B6P,iBvBjB5B7P;;AAAe;AAC/H;;;AAAgHC,UuBuB/FsQ,iBvBvB+FtQ,CAAAA,UuBuBnEiQ,0BvBvBmEjQ,GuBuBtCiQ,0BvBvBsCjQ,CAAAA,SuBuBFoQ,qBvBvBEpQ,CuBuBoBqQ,CvBvBpBrQ,CAAAA,CAAAA,CAAM;AACtH;;;AAAwEG,KuB2B5DoQ,aAAAA,GvB3B4DpQ,GAAAA,GAAAA,GAAAA;;;AAA8F;AACtK;;;;;;AAAuHiH,KuBoC3GoJ,gBAAAA,GvBpC2GpJ,CAAAA,GAAAA,GAAAA,EuBoC/EmJ,avBpC+EnJ,EAAAA,EAAAA,GAAAA,IAAAA;;;;;;;;;;AAA4C;AACnK;;;;;;;;;;;AAAsUtH,KuByD1T2Q,iBvBzD0T3Q,CAAAA,UuByD9RmQ,0BvBzD8RnQ,GuByDjQmQ,0BvBzDiQnQ,EAAAA,UAAAA,MuByDrN4Q,uBvBzDqN5Q,CuByD7LuQ,CvBzD6LvQ,CAAAA,GAAAA,MuByDlL4Q,uBvBzDkL5Q,CuByD1JuQ,CvBzD0JvQ,CAAAA,CAAAA,GAAAA,CAAAA,SAAAA,EuByDxI8Q,kBvBzDwI9Q,CuByDrHuQ,CvBzDqHvQ,EuByDlH6Q,CvBzDkH7Q,CAAAA,EAAAA,GAAAA,IAAAA;;;;;;;;;AAAtFI,KuBkEpO0Q,kBvBlEoO1Q,CAAAA,UuBkEvM+P,0BvBlEuM/P,GuBkE1K+P,0BvBlE0K/P,EAAAA,UAAAA,MuBkE9HwQ,uBvBlE8HxQ,CuBkEtGmQ,C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"}